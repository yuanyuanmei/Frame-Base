<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljcx.quartz.dao.SysJobMapper">

	<resultMap type="SysJob" id="SysJobResult">
	</resultMap>
	
	<sql id="selectJobVo">
        select id, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent, status, create_by, create_time, remark
		from sys_job
    </sql>
	
	<select id="selectJobList" parameterType="com.ljcx.quartz.dto.SysJobDto" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		<where>
			<if test="item.jobName != null and item.jobName != ''">
				AND job_name like concat('%', #{item.jobName}, '%')
			</if>
			<if test="item.jobGroup != null and item.jobGroup != ''">
				AND job_group = #{item.jobGroup}
			</if>
			<if test="item.status != null and item.status != ''">
				AND status = #{item.status}
			</if>
			<if test="item.invokeTarget != null and item.invokeTarget != ''">
				AND invoke_target like concat('%', #{item.invokeTarget}, '%')
			</if>
		</where>
	</select>
	
	<select id="selectJobAll" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
	</select>
	
	<select id="selectJobById" parameterType="Long" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where id = #{jobId}
	</select>
	
	<delete id="deleteJobById" parameterType="Long">
 		delete from sys_job where id = #{jobId}
 	</delete>
 	
 	<delete id="deleteJobByIds" parameterType="Long">
 		delete from sys_job where id in
 		<foreach collection="array" item="jobId" open="(" separator="," close=")">
 			#{jobId}
        </foreach> 
 	</delete>


</mapper> 